:lua: ภาษา Lua :lua: 
-Luaเป็นภาษาโค๊ดชนิดนึงซึ่งมีการทำงานแบบimperative programmingหรือการเขียนโปรแกรมเชิงคำสั่ง ในการทำงานจะเหมือนกับภาษาอื่นๆ คือทำงานจากบนลงล่างและซ้ายไปขวาตามลำดับ

องค์ประกอบพื้นฐาน

:OP_rightarrow: ประเภทข้อมูล(Data type)
-ยกตัวอย่างเช่น ตัวเลข,ตัวอักษร,ค่าทางตรกระศาสตร์

:OP_rightarrow: ตัวดำเนินการ(Operator)
-ยกตัวอย่างเช่น บวก,ลบ,คูณ,หาร,มากกว่า,น้อยกว่า,เท่ากับ,และ,หรือ,ไม่

:OP_rightarrow: ตัวแปร(Variable)
-คือชื่อที่อ้างอิงถึงข้อมูลหนึ่ง เช่น x=10 เท่ากับตัวแปร x มีค่าเท่ากับ 10

:OP_rightarrow: โปรแกรมย่อย(function)
-เป็นการแบ่งส่วนการทำงานของคำสั่งต่างๆเพื่อสามารถนำกลับมาใช้งานใหม่ได้เดะเรียกใช้งานแค่ในส่วนของfunction จะทำให้ช่วยความซ้ำซ้อนของการเขียนโปรแกรม
--------------------------------
ตัวแปรและประเภทข้อมูล
--------------------------------

:OP_rightarrow: ข้อมูลในภาษาLua
-ข้อมูลในภาษาluaจะสามารถแบ่งได้8ประเภทหลักๆได้แก่ nil,boolean,number,string,table,function,userdata,thread

:OP_rightarrow: Case sensitive
-ในการกำหนดชื่อต่างๆในภาษาLuaจะมีเรื่องของcase sensitiveมาเกี่ยวข้องเนื่องจากถ้าเราสร้างตัวแปรมา2ตัว ตัวแรกคือ test ตัวที่สองคือ Test จะถูกนับว่าเป็นคนละตัว

:OP_rightarrow: ตัวแปร
-ลำดับการประกาศตัวแปร (ตัวแปร=ค่าที่ต้องการกำหนด)

:OP_rightarrow: Global/Local
-ขอบเขตของตัวแปรในภาษาLuaจะแบ่งได้2อย่างคือ ตัวแปรglobalและตัวแปรlocal
--[[ ====== > ตัวแปรLocal < ====== ]]--
-เป็นตัวแปรที่สามารถใช้งานได้แค่ในขอบเขตที่กำหนด เช่น
do
 local a=10
end
print(a)
ผลลัพธ : nil
========================================================================

--[[ ====== > ตัวแปรGlobal < ====== ]]--
-ตัวแปรglobalจะเป็นส่วนตรงข้ามของlocalเนื่องจากสามารถเรียกใช้งานได้จากทุกที่ของโปรแกรม
do
 local a=10
end
print(a)
ผลลัพธ : nil
========================================================================

:OP_rightarrow: คำสงวน
-คือคำที่ภาษาโปรแกรมใช้ในนิยามคำสั่งหรือโครงสร้างของภาษาจึงห้ามนำมาใช้เป็นชื่อตัวแปร

:OP_rightarrow: ตัวดำเนินการ
-แบ่งเป็นตัวดำเนินการเอกภาคและตัวดำเนินการทวิภาค

:OP_rightarrow: ตัวดำเนินการกำหนดค่า
-มีตัวเดียวคือ = ใส่ค่าฝั่งขวาและตัวแปรฝั่งซาย

:OP_rightarrow: ตวดำเนนการตวเลข
-เชน บวก,ลบ,ตณ,หาร,หารเอาเศษ,ยกกำลง

:OP_rightarrow: ตัวดำเนินการเปรียบเทียบ
-เช่น เท่ากับ,ไม่เท่ากบ,น้อยกว่า,น้อยกว่าหรือเท่ากับ,มากกว่า,มากกว่าหรือเท่ากับ

:OP_rightarrow: ตัวดำเนินการทางตรรกะ
-เช่น และ,หรอ,ไม่
--------------------------------
คำสั่งเงื่อนไข
-เป็นการสร้างคำสั่งขึ้นมาเพื่อเช็คเงื่อนไขที่กำหนดว่าเป็นจริงหรือไม่ ถ้าหากเป็นจริงจะทำงานในกรอบการทำงานของเงื่อนไขโดยคำสั่งที่นืยมใช้กันคือ if statement
--------------------------------
--[[ ====== > if < ====== ]]--
-ifจะเปนคำสั่งในการเช็คเงื่อนไขหากเงื่อนไขเปนจริงจะทำงานตามที่กำหนดไว้เช่น
a=10
if a == 10 then
print("a=10")
end
ผลลพธ : a=10

ในเงื่อนไขข้างต้นคือทำการตรวจเช็คว่าตัวแปรมีค่าเท่ากับ10หรือไม่ถ้าหากเป็นจริงจะทำงานในกรอบการทำงาน
========================================================================
--[[ ====== > else < ====== ]]--
-ในส่วนของคำสั่งelseจะตองทำงานคู่กันกับifการทำงานของelseนั้นจะทำงานต่อเมื่อไม่มีเงื่อนไขที่ตรงกับที่กำหนดไว้
a=10
if a == 20 then
print("a=20")
else
print("ไม่ตรงตามเงื่อนไข")
end
ผลลพธ : ไม่ตรงตามเงื่อนไข

ในเงื่อนไขที่กำหนดขั้นเนื่องจากaไม่ได้มีค่าเท่ากับ20จึงไปทำงานที่elseแทน
========================================================================
--[[ ====== > elseif < ====== ]]--
-elseifจะมีการทำงานเหมือนกับifแต่เช่นเดียวกับelseที่หากต้องการเรียกใช้งานตองเรียกใช้งานคู่กับif ตัวของelseifนั้นจะมีหน้าที่ตรวจสอบเงื่อนไขเหมือนกับifแต่ถ้าหากมีการตรวจเช็คว่าเงื่อนไขถูกต้องแล้วจะหลุดจากกรอบการทำงานของif
if a == 10 then
print("a=10")
elseif a == 20 then
print("a==20")
end
--------------------------------
คำสั่งวนลูป
-คำสั่งวนลูปเป็นการทำงานซ้ำไปเรื่อยๆตามจำนวนที่เรากำหนดหรือทำงานวนซ้ำจนกว่าเงื่อนไขที่กำหนดจะเป็นเท็จ คำสั่งที่นิยมใช้กันจะมี for loop,while loop,repeat loop
--------------------------------
========================================================================
--[[ ====== > for loop < ====== ]]--
-จะทำซ้ำโดยกำหนดจำนวนรอบว่าจะทำกี่ครั้ง
ตัวอย่าง
รูปแบบที่1
for ตัวแปร=ค่าเริ่มต้น,ค่าสิ้นสุด do 
คำสั่งที่ต้องการทำซ้ำ
end
========================================================================

รูปแบบที่2
for ตัวแปร = ค่าเริ่มต้น, ค่าสิ้นสุด, step ในการเพิ่มหรือลดค่า do 
คำสั่งที่จะทำซ้ำ 
end
========================================================================

--[[ ====== > while loop < ====== ]]--
-จะทำคำสั่งใน block ซ้ำจนกว่าเงื่อนไขจะเป็นเท็จ
local counter = 0
while counter < 5 do
  counter = counter + 1  -- เพิ่มค่าทีละ 1 ในแต่ละรอบ
  print("counter is ".. counter)
end
========================================================================

--[[ ====== > Repeat loop < ====== ]]--
-จะทำงานใน block ก่อนจะตรวจสอบเงื่อนไขและจะออกจากลูปเมื่อเงื่อนไขเป็นจริง
local counter = 0
repeat
  counter = counter + 1  รอบ
  print("counter is ".. counter)
until counter == 5
========================================================================
